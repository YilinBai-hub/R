SE)") + theme_classic()
ggplot(ocean_total, aes(y = lnRR, x = Year..online., size = sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (SE)") + theme_classic()
ggplot(ocean_total, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,25), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp,xlim = c(0.5,200))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp,xlim = c(0.5,1))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp,xlim = c(0.5,1.5))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp,xlim = c(0.5,100))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "vi",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0,5), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,5), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,25), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-4,4))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45,trunk.size = 2,branch.size = 20,twig.size = 2)
? orchard_plot
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45,trunk.size = 2,branch.size = 210,twig.size = 2)
? orchard_plot
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45,trunk.size = 2,branch.size = 10,twig.size = 2)
? orchard_plot
ocean_total_test <- ocean_total %>% filter(V_lnRR<4e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(V_lnRR<3e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(V_lnRR<2e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<3e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<2e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<1e+05)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<30000)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
sum(1/sqrt(ocean_total$V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
sum(1/sqrt(ocean_total$V_lnRR)>500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ggplot(ocean_total, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total <- ocean_total %>% mutate(Year_diff = Year..online. - mean(Year..online.))
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
# Multi-level meta-analytic model
MLMA_drawer <- metafor::rma.mv(lnRR~1/V_lnRR, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA_drawer
r2 <- orchaRd::r2_ml(MLMA_drawer)
r2
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
# Multi-level meta-analytic model
MLMA_drawer <- metafor::rma.mv(lnRR~1/V_lnRR, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA_drawer
r2 <- orchaRd::r2_ml(MLMA_drawer)
r2
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
pis <- predict(MLMA,atransf=exp)
pis
pis <- predict(MLMA,atransf=exp)
pis
?predict
pis <- predict(MLMA,transf=exp)
pis
pis <- predict(MLMA)
pis
pis <- predict(MLMA,transf=exp)
pis
pis <- predict(MLMA,transf=exp)
pis
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
r2 <- orchaRd::r2_ml(MLMA_drawer)
r2
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
r2 <- orchaRd::r2_ml(MLMA_drawer)
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
pis <- predict(MLMA,transf=exp)
pis
pis <- predict(MLMA,transf=exp)
pis
pis[
ci.lb]
pis <- predict(MLMA,transf=exp)
pis
pis[ci.lb]
pis <- predict(MLMA,transf=exp)
pis
pis[3]
pis <- predict(MLMA,transf=exp)
pis
pis[[3]]
pis <- predict(MLMA,transf=exp)
pis
pis[[4]]
pis <- predict(MLMA,transf=exp)
pis
pis[[5]]
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA,transf=exp)
pis
pis[[2]]
pis <- predict(MLMA,transf=exp)
pis
pis[[3]]
pis <- predict(MLMA,transf=exp)
pis
$pred
pis <- predict(MLMA,transf=exp)
pis
pis$pred
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
r i2_vals[[3]]
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
i2_vals[[3]]
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45,trunk.size = 2,branch.size = 10,twig.size = 2)
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
r2 <- orchaRd::r2_ml(MLMA_drawer)
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
r2_time[1]
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
# Multi-level meta-analytic model
MLMA_drawer <- metafor::rma.mv(lnRR~1/V_lnRR, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA_drawer
r2 <- orchaRd::r2_ml(MLMA_drawer)
i2 <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2)
i2
MLMA_drawer$estimate
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
tanh(MLMA_drawer$b[1])
(MLMA_drawer$b[1])
MLMA_drawer$b[1]
MLMA_drawer$b
MLMA_both$b
MLMA_both$b[2]
MLMA_both$b[1]
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
# Multi-level meta-analytic model
MLMA_drawer <- metafor::rma.mv(lnRR~1/V_lnRR, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA_drawer
r2_drawer <- orchaRd::r2_ml(MLMA_drawer)
i2_drawer <- tibble(type = firstup(gsub("I2_", "",names(r2))), I2 = r2_drawer)
i2_drawer
coef(metareg_time_c)[1]
coef(MLMA_both)[1]
MLMA_both$b[1]
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR-1, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of lnRR") +
theme_classic()
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library('plotrix')
library('flextable')
library(ggplot2)
library(readr)
library(orchaRd)
path <- "./Data/OA_activitydat_20190302_BIOL3207.csv"
data_activity <- read_csv(path)
data_activity
data_activity <- data_activity %>% filter(!is.na(activity))
data_activity <- data_activity %>% filter(!is.na(animal_id))
data_activity
control_acticity <- data_activity %>% group_by(species) %>% filter(treatment=="control")%>% summarise(ctrl.n =n(),ctrl.mean = mean(activity),ctrl.sd = sd(activity))
co2_activity <-  data_activity %>% group_by(species) %>% filter(treatment=="CO2")%>% summarise(oa.n =n(),oa.mean = mean(activity),oa.sd = sd(activity))
group_activity <-  merge(control_acticity,co2_activity)
group_activity
clark_paper_data <- read_csv("./Data/clark_paper_data.csv")
clark_total <- merge(clark_paper_data,group_activity)
clark_total
ocean_meta_data <- read_csv("./Data/ocean_meta_data.csv")
str(ocean_meta_data)
clark_total$"Pub year IF" <- as.character(clark_total$"Pub year IF")
clark_total$"2017 IF" <- as.character(clark_total$"2017 IF")
colnames(clark_total)[16] <- "Species"
clark_total[is.na(clark_total)] <- "-"
ocean_total <- bind_rows(clark_total,ocean_meta_data)
ocean_total <- ocean_total %>% filter(ctrl.mean>0) %>% filter(oa.mean>0)
ocean_total <- metafor::escalc(measure = "ROM", m1i = oa.mean, m2i = ctrl.mean, sd1i =oa.sd
, sd2i = ctrl.sd, n1i = oa.n, n2i = ctrl.n, data = ocean_total, var.names = c("lnRR", "V_lnRR"))
ocean_total <- tibble::rowid_to_column(ocean_total, "residual")
ocean_total <- ocean_total %>% filter(!is.na(lnRR))
ocean_total <- ocean_total %>% filter(!is.na(V_lnRR))
ocean_total <- ocean_total %>% filter(V_lnRR<5000)
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA,transf=exp)
pis
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45,trunk.size = 2,branch.size = 10,twig.size = 2)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of lnRR") +
theme_classic()
ggplot(ocean_total, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
num_less <- sum(1/sqrt(ocean_total$V_lnRR)>500)
ocean_total_test <- ocean_total %>% filter(1/sqrt(V_lnRR)<500)
ggplot(ocean_total_test, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ocean_total <- ocean_total %>% mutate(Year_diff = Year..online. - mean(Year..online.))
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
MLMA_drawer <- metafor::rma.mv(lnRR~1/V_lnRR, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA_drawer
r2_drawer <- orchaRd::r2_ml(MLMA_drawer)
i2_drawer <- tibble(type = firstup(gsub("I2_", "",names(r2_drawer))), I2 = r2_drawer)
i2_drawer
MLMA_both <- metafor::rma.mv(lnRR ~ Year_diff + 1/V_lnRR, V = V_lnRR,
random=list(~1|Study,
~1|residual),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_both)
r2_time_sv <- orchaRd::r2_ml(MLMA_both)
r2_time_sv
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
r2_time
MLMA_time <- metafor::rma.mv(lnRR ~ Year_diff, V = V_lnRR,
random = list(~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total)
summary(MLMA_time)
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
r2_time <- orchaRd::r2_ml(MLMA_time)
r2_time
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|Species),
data=ocean_total)
~1|residual,
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA,transf=exp)
pis
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
i2_vals <- orchaRd::i2_ml(MLMA)
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 4, yaxis = "seinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (0.1,30), atransf= exp,xlim = c(-3.5,3.5))
