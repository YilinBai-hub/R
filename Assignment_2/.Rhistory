xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,100))
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR,digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,100))
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 8, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,100))
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,100))
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,150))
# Lets make a funnel plot to visualize the data in relation to the precision, inverse sampling standard error,
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "Correlation Coefficient (r)", atransf=tanh, legend = TRUE,ylim =c (1,200))
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf =transf.logortord )
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf ="transf.logortord" )
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf(transf = "transf.logortord",pc = ocean_total$ctrl.mean))
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf(transf = "transf.logortord",pc = ocean_total$ctrl.mean))
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200))
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 2, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf(transf = "transf.logortord",pc = ocean_total$ctrl.mean))
metafor::funnel(ocean_total,x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " (r)", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf(transf = "transf.logortord",pc = ocean_total$ctrl.mean))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", atransf=tanh, legend = TRUE,ylim =c (1,200))
metafor::funnel(x = ocean_total$InRR, vi = ocean_total$VRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),ylim 1as 1, xlab = "Correlation Coefficient (r)", atransf= exp, legend = TRUE),ylim = c(1,100))
metafor::funnel(x = ocean_total$InRR, vi = ocean_total$VRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", atransf= exp, legend = TRUE),ylim = c(1,100))
metafor::funnel(x = ocean_total$InRR, vi = ocean_total$VRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", atransf= exp, legend = TRUE,ylim = c(1,100))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "Correlation Coefficient (r)", atransf= exp, legend = TRUE,ylim = c(1,100))
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf= exp,)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", atransf=tanh, legend = TRUE,ylim =c (1,200),atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", legend = TRUE,ylim =c (1,200), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "The transformed ratio of means", atransf= exp, legend = TRUE,ylim = c(1,100))
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR<1.0r+08)) +
ggplot(ocean_total, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ocean_total_filter <- ocean_total_filter<1.0e+08
ocean_total_filter <- ocean_total$lnRR<1.0e+08
ocean_total_filter
ocean_total_filter <- ocean_total%<%filter(lnRR<1.0e+08)
ocean_total_filter <- ocean_total %<% filter(ocean_total$lnRR<1.0e+08)
ocean_total_filter <- ocean_total %>% filter(ocean_total$lnRR<1.0e+08)
ocean_total_filter
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ocean_total_filter <- ocean_total %>% filter(ocean_total$V_lnRR<1.0e+08)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ocean_total_filter <- ocean_total %>% filter(ocean_total$V_lnRR<2.0e+06)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ocean_total_filter <- ocean_total %>% filter(ocean_total$V_lnRR<5000)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "Fisher's Z-transformed Correlation Coefficient (Zr)", x = "Sampling Variance of Zr") +
theme_classic()
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
library(tibble)
# Including sampling variance as moderator
metareg_v <- rma.mv(Zr ~ Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total_filter)
View(ocean_total_filter)
MLMA
# Multi-level meta-analytic model
MLMA_2 <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total_filter)
MLMA_2
pis <- predict(MLMA_2)
pis
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA_2)
i2_vals
ggplot(arnold_data_endo, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
ggplot(ocean_total_filter, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
# Including sampling variance as moderator
metareg_time <- rma.mv(Zr ~ Year..online., V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
library(tidyr)
library(dplyr)
library('plotrix')
library('flextable')
library(ggplot2)
library(readr)
library(orchaRd)
# Including sampling variance as moderator
metareg_time <- rma.mv(Zr ~ Year..online., V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
# Including sampling variance as moderator
metareg_time <- metafor::rma.mv(Zr ~ Year..online., V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
# Including sampling variance as moderator
metareg_time <- metafor::rma.mv(lnRR ~ Year..online. , V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
summary(metareg_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_time) #"ADD YOUR CODE HERE"
r2_time
# Including sampling variance as moderator
metareg_file_drawer <- metafor::rma.mv(lnRR ~ Year..online.+V_lnRR, V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
summary(metareg_file_drawer)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_file_drawer) #"ADD YOUR CODE HERE"
r2_time
ocean_total_filter <- ocean_total_filter %>% mutate(Year..online. = Year..online. - mean(Year..online.)) # 'ADD YOUR CODE HERE'
ocean_total_filter
ocean_total_filter <- ocean_total_filter %>% mutate(Year_diff = Year..online. - mean(Year..online.)) # 'ADD YOUR CODE HERE'
ocean_total_filter
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library('plotrix')
library('flextable')
library(ggplot2)
library(readr)
library(orchaRd)
path <- "./Data/OA_activitydat_20190302_BIOL3207.csv"
data_activity <- read_csv(path)
data_activity
data_activity <- data_activity %>% filter(!is.na(activity))
data_activity <- data_activity %>% filter(!is.na(animal_id))
data_activity
control_acticity <- data_activity %>% group_by(species) %>% filter(treatment=="control")%>% summarise(ctrl.n =n(),ctrl.mean = mean(activity),ctrl.sd = sd(activity))
co2_activity <-  data_activity %>% group_by(species) %>% filter(treatment=="CO2")%>% summarise(oa.n =n(),oa.mean = mean(activity),oa.sd = sd(activity))
group_activity <-  merge(control_acticity,co2_activity)
group_activity
clark_paper_data <- read_csv("./Data/clark_paper_data.csv")
clark_total <- merge(clark_paper_data,group_activity)
clark_total
ocean_meta_data <- read_csv("./Data/ocean_meta_data.csv")
str(ocean_meta_data)
clark_total$"Pub year IF" <- as.character(clark_total$"Pub year IF")
clark_total$"2017 IF" <- as.character(clark_total$"2017 IF")
colnames(clark_total)[16] <- "Species"
clark_total[is.na(clark_total)] <- "-"
ocean_total <- bind_rows(clark_total,ocean_meta_data)
ocean_total <- metafor::escalc(measure = "ROM", m1i = oa.mean, m2i = ctrl.mean, sd1i =oa.sd
, sd2i = ctrl.sd, n1i = oa.n, n2i = ctrl.n, data = ocean_total, var.names = c("lnRR", "V_lnRR"))
ocean_total <- tibble::rowid_to_column(ocean_total, "residual")
ocean_total <- ocean_total %>% filter(!is.na(lnRR))
ocean_total <- ocean_total %>% filter(!is.na(V_lnRR))
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA)
pis
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45)
? orchard_plot
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", legend = TRUE,ylim =c (1,200), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "The transformed ratio of means", atransf= exp, legend = TRUE,ylim = c(1,100))
ocean_total_filter <- ocean_total %>% filter(ocean_total$V_lnRR<5000)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
library(tibble)
# Including sampling variance as moderator
metareg_v <- rma.mv(Zr ~ Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
library(tibble)
# Including sampling variance as moderator
metareg_v <- metafor::rma.mv(Zr ~ Zr_v, V = Zr_v,
random = list(~1|Ref,
~1|residual),
test = "t", dfs = "contain",
data = arnold_data_endo)
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library('plotrix')
library('flextable')
library(ggplot2)
library(readr)
library(orchaRd)
path <- "./Data/OA_activitydat_20190302_BIOL3207.csv"
data_activity <- read_csv(path)
data_activity
data_activity <- data_activity %>% filter(!is.na(activity))
data_activity <- data_activity %>% filter(!is.na(animal_id))
data_activity
control_acticity <- data_activity %>% group_by(species) %>% filter(treatment=="control")%>% summarise(ctrl.n =n(),ctrl.mean = mean(activity),ctrl.sd = sd(activity))
co2_activity <-  data_activity %>% group_by(species) %>% filter(treatment=="CO2")%>% summarise(oa.n =n(),oa.mean = mean(activity),oa.sd = sd(activity))
group_activity <-  merge(control_acticity,co2_activity)
group_activity
clark_paper_data <- read_csv("./Data/clark_paper_data.csv")
clark_total <- merge(clark_paper_data,group_activity)
clark_total
ocean_meta_data <- read_csv("./Data/ocean_meta_data.csv")
str(ocean_meta_data)
clark_total$"Pub year IF" <- as.character(clark_total$"Pub year IF")
clark_total$"2017 IF" <- as.character(clark_total$"2017 IF")
colnames(clark_total)[16] <- "Species"
clark_total[is.na(clark_total)] <- "-"
ocean_total <- bind_rows(clark_total,ocean_meta_data)
ocean_total <- metafor::escalc(measure = "ROM", m1i = oa.mean, m2i = ctrl.mean, sd1i =oa.sd
, sd2i = ctrl.sd, n1i = oa.n, n2i = ctrl.n, data = ocean_total, var.names = c("lnRR", "V_lnRR"))
ocean_total <- tibble::rowid_to_column(ocean_total, "residual")
ocean_total <- ocean_total %>% filter(!is.na(lnRR))
ocean_total <- ocean_total %>% filter(!is.na(V_lnRR))
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA)
pis
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45)
? orchard_plot
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = " Difference be", legend = TRUE,ylim =c (1,200), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, yaxis =  "seinv", digits = 2, level = c(0.1, 0.05, 0.01), shade = c("white", "gray55", "gray 75"),las = 1, xlab = "The transformed ratio of means", atransf= exp, legend = TRUE,ylim = c(1,100))
ocean_total_filter <- ocean_total %>% filter(ocean_total$V_lnRR<5000)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
pis <- predict(MLMA_2)
pis
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA_2)
i2_vals
ggplot(ocean_total_filter, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
# Including sampling variance as moderator
metareg_time <- metafor::rma.mv(lnRR ~ Year..online. , V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
summary(metareg_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_time) #"ADD YOUR CODE HERE"
r2_time
ocean_total_filter <- ocean_total_filter %>% mutate(Year_diff = Year..online. - mean(Year..online.)) # 'ADD YOUR CODE HERE'
ocean_total_filter
# Including sampling variance as moderator
metareg_file_drawer <- metafor::rma.mv(lnRR ~ Year_diff+V_lnRR, V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
summary(metareg_file_drawer)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_file_drawer) #"ADD YOUR CODE HERE"
r2_time
ocean_total <- ocean_total %>% filter(V_lnRR<5000)
ocean_total <- ocean_total %>% filter(V_lnRR<5000)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (1,200), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (1,300), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (1,1000), atransf= exp)
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (1,1000), atransf= exp)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45)
? orchard_plot
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
library(dplyr)
library('plotrix')
library('flextable')
library(ggplot2)
library(readr)
library(orchaRd)
path <- "./Data/OA_activitydat_20190302_BIOL3207.csv"
data_activity <- read_csv(path)
data_activity
data_activity <- data_activity %>% filter(!is.na(activity))
data_activity <- data_activity %>% filter(!is.na(animal_id))
data_activity
control_acticity <- data_activity %>% group_by(species) %>% filter(treatment=="control")%>% summarise(ctrl.n =n(),ctrl.mean = mean(activity),ctrl.sd = sd(activity))
co2_activity <-  data_activity %>% group_by(species) %>% filter(treatment=="CO2")%>% summarise(oa.n =n(),oa.mean = mean(activity),oa.sd = sd(activity))
group_activity <-  merge(control_acticity,co2_activity)
group_activity
clark_paper_data <- read_csv("./Data/clark_paper_data.csv")
clark_total <- merge(clark_paper_data,group_activity)
clark_total
ocean_meta_data <- read_csv("./Data/ocean_meta_data.csv")
str(ocean_meta_data)
clark_total$"Pub year IF" <- as.character(clark_total$"Pub year IF")
clark_total$"2017 IF" <- as.character(clark_total$"2017 IF")
colnames(clark_total)[16] <- "Species"
clark_total[is.na(clark_total)] <- "-"
ocean_total <- bind_rows(clark_total,ocean_meta_data)
ocean_total <- metafor::escalc(measure = "ROM", m1i = oa.mean, m2i = ctrl.mean, sd1i =oa.sd
, sd2i = ctrl.sd, n1i = oa.n, n2i = ctrl.n, data = ocean_total, var.names = c("lnRR", "V_lnRR"))
ocean_total <- tibble::rowid_to_column(ocean_total, "residual")
ocean_total <- ocean_total %>% filter(!is.na(lnRR))
ocean_total <- ocean_total %>% filter(!is.na(V_lnRR))
ocean_total <- ocean_total %>% filter(V_lnRR<5000)
# Multi-level meta-analytic model
MLMA <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total)
MLMA
pis <- predict(MLMA)
pis
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA)
i2_vals
## Make a pretty table. First, lets clean up the names of the different I2 estimates. Lets remove I2_. It's a string, so, we can use some regular expressions to fix that. `gsub` is pretty useful. You put a pattern in and tell it what you would like to replace the text with. In this case, just blank will do! Then, we'll make the first letter of what is left capitalised.
i2 <- tibble(type = firstup(gsub("I2_", "",names(i2_vals))), I2 = i2_vals)
# You remember flextable. Now, lets make a pretty table. We can so some nice modifications here too.
flextable(i2) %>%
align(part = "header", align = "center") %>%
compose(part = "header", j = 1, value = as_paragraph(as_b("Type"))) %>%
compose(part = "header", j = 2, value = as_paragraph(as_b("I"), as_b(as_sup("2")), as_b("(%)")))
# Make an orchard plot using the model object
orchaRd::orchard_plot(MLMA, group = "Study", data = ocean_total, xlab = "The log response ratio(lnRR)", angle = 45)
? orchard_plot
metafor::funnel(x = ocean_total$lnRR, vi = ocean_total$V_lnRR, digits = 0, yaxis = "vinv",
level = c(0.1, 0.05, 0.01),
shade = c("white", "gray55", "gray 75"), las = 1,
xlab = "The transformed ratio of means", legend = TRUE,ylim =c (1,1000), atransf= exp)
ggplot(ocean_total_filter, aes(y = lnRR, x = V_lnRR)) +
geom_point() +
geom_smooth(method = lm) +
labs(y = "log transformed ratio of means", x = "Sampling Variance of Zr") +
theme_classic()
# Multi-level meta-analytic model
MLMA_2 <- metafor::rma.mv(lnRR~1, V = V_lnRR,
method="REML",
random=list(~1|Species,
~1|Study,
~1|residual),
data=ocean_total_filter)
MLMA_2
pis <- predict(MLMA_2)
pis
ggplot(ocean_total_filter, aes(y = lnRR, x = Year..online., size = 1/sqrt(V_lnRR))) + geom_point(alpha = 0.30) + geom_smooth(method = lm, col = "red", show.legend = FALSE) + labs(x = "Publication Year", y = "Log transformed ratio of means", size = "Precision (1/SE)") + theme_classic()
# Including sampling variance as moderator
metareg_time <- metafor::rma.mv(lnRR ~ Year..online. , V = V_lnRR,
random = list(~1|Species,
~1|residual,
~1|Study),
test = "t", dfs = "contain",
data = ocean_total_filter)
summary(metareg_time)
# How much variation does time when results were published explain in Zr?
r2_time <- orchaRd::r2_ml(metareg_time) #"ADD YOUR CODE HERE"
r2_time
ocean_total_filter <- ocean_total_filter %>% mutate(Year_diff = Year..online. - mean(Year..online.)) # 'ADD YOUR CODE HERE'
ocean_total_filter
i2_vals
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA_2)
i2_vals
## Calculate I2
i2_vals <- orchaRd::i2_ml(MLMA_2)
i2_vals
