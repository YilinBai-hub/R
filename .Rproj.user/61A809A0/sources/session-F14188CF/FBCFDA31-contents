---
title: "Data visualization and inference"
author: "Yilin Bai"
date: "2022-08-26"
output: html_document
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Introduction

The previous workbook provided a broad survey of ggplot functionality along with some hands-on experience making a variety of plots. This built on last week's exposure to some visualisation exercises in the context of statistical inference and sampling. This workbook aims to combine the two, building your visualisation skills through the active interrogation of a penguin data set.


## Preliminaries

Your first block of code should install any packages and load in the corresponding libraries. You can also read in any data files here.

In what follows, we will be using the penguins data that is part of the "palmerpenguins" package along with the now familiar tidyverse.

```{r}
library(tidyverse)
install.packages('palmerpenguins')

library(palmerpenguins)

head(penguins)
```

Let's get to know this data set. The code block uses "str", but you may also want to try out "glimpse", which is similar to "head" above. Or, you can use "view" to bring up the tibble as a spreadsheet in another window. So many options, at least for a dataset of this size. (You wouldn't want to use view if the tibble had 1000000 rows!)

```{r}
str(penguins)
```
The tibble contain data for 344 penguins. There are 3 different species of penguins in this dataset, observed across 3 islands in the Palmer Archipelago, Antarctica. For most of the penguins, additional characteristics of the penguins were recorded.

## Exploring the Data

You can already see above that there is some missing data, conveniently encoded here as "NA". For how many of the 344 penguins is there some data missing? Write code in the block below to answer this question. As is generally the case in R, there are many ways to do this. You may for example wish to use "is.na" or "complete.cases", or do something else entirely.

```{r}
sum(is.na(penguins))
```

Now let's get a first look at the data. Make a simple scatterplot of flipper length versus bill length.

```{r}
ggplot(data = penguins, mapping = aes(x = bill_length_mm, y = flipper_length_mm)) +
  geom_point()
```

Notice the comment that appears above the plot: "Warning: Removed 2 rows containing missing values (geom_point)". This means that measurements were missing for two of the penguins; however, ggplot is smart enough to ignore those rows rather than return an error.

You will have observed from the plot that flipper length tends to increase with bill length. This is often the case with such measurements, because in general a larger penguin is likely to have larger features. We can quantify the strength of the linear relationship by computing the correlation.


```{r}
cor.test(penguins$bill_length_mm,penguins$flipper_length_mm)
```

We can also add the linear trend line to the plot using geom_smooth. To do this yourself, copy your ggplot code from above to the code block below and add "geom_smooth(method='lm')". 

```{r}
ggplot(data = penguins, mapping = aes(x = bill_length_mm, y = flipper_length_mm)) +
  geom_point()+geom_smooth(method='lm')
```

Notice the additional comment now above the plot: "`geom_smooth()` using formula 'y ~ x'". You may recall this syntax from BIOL 2202. When we used "method='lm'", we told R to construct a linear model of y (flipper length) as a function of x (bill length). The call to geom_smooth then adds the result as the regression line.

Let's consider another pair of measurements: body mass and bill depth. Run the same correlation test as above on those two measurements:

```{r}
cor.test(penguins$bill_depth_mm,penguins$body_mass_g)
```


In a sentence, describe the results of this correlation test in the block below.

```{r eval=FALSE}
The Pearson product-moment correlation attempts to draw a best-fit line through the data of two variables, and the Pearson correlation coefficient R indicates how far all these data points are from this best-fit line (i.e., how well and how the data points fit into this new model/best-fit line).

According to the correlation test,  cor = -0.4719156, the overall correlation is negative and indicate there is Moderate correlation between the two variables.

```

Let's also visualise the data, again using a scatterplot, this time with bill depth on the y-axis and body mass on the x-axis. Do not use geom_smooth to add a line just yet.

```{r}
ggplot(data = penguins, mapping = aes(y = bill_depth_mm, x = body_mass_g)) +
  geom_point()
```

What does this plot tell you about the relationship between bill depth and body mass? Describe your observations in the block below.

```{r eval=FALSE}
The plot shows the relationship between the Bill Depth and Body Mass. As can be seen from the scatterplots, the data is clearly divided into two groups. The coefficient between Bill Depth and body mass is different in each group.
```

Now let's add the linear trend line to the plot.

```{r}
ggplot(data = penguins, mapping = aes(y = bill_depth_mm, x = body_mass_g)) +
  geom_point()+geom_smooth(method='lm')
```

Is that what you expected? Is the regression line a good model of how bill depth varies with body mass? Comment in the block below.

```{r eval=FALSE}
# This isn't what I expected. I don't think this regression line is a good model of how Bill depth varies with body mass. Because I think this data set is clearly divided into two groups, and these two groups should be evaluated separately for the regression line that best fits them. If you look at them as one group, such a regression line doesn't come close to the reality of either group.
 
```

## Further Exploring the Data

When data is heterogeneous to the extent that there are distinct clusters, it is usually best to deal with the heterogeneity before calculating statistics or constructing models. This is one of the reasons why visualisation is so crucial! Here, the plot makes it very clear that there are two distinct clusters, though for the moment the source of these clusters is unknown.

Let's dig a little deeper into the data to understand how the three penguin species differ. Try making a box plot of the body mass distributions for each species.

```{r}
ggplot(data = penguins,aes(x = species, y = body_mass_g, fill=species))+geom_boxplot()

```

One of the species appears to be heavier than the others. Let's reinforce that observation with a more informative plot that also shows the individual values (points). This could be a violin plot with jitter, or something else of your choosing.

```{r}
ggplot(data = penguins,aes(y = body_mass_g,x = species, fill=species))+geom_violin()+geom_point(position = position_jitter(seed = 1, width = 0.2))

```

These plots suggest that species differences may be responsible for the clusters previously observed. Let's repeat the scatterplot that showed the clusters, but use a different colour for each species. Write that code in the block below.

```{r}
ggplot(data = penguins, mapping = aes(y = bill_depth_mm, x = body_mass_g,fill = species,colour = species)) +geom_point()
```

Wouldn't it be nice if we could also indicate the linear trend by species? Try just adding geom_smooth again and see what happens! Below we will call this your very colourful plot.

```{r}
ggplot(data = penguins, mapping = aes(y = bill_depth_mm, x = body_mass_g,fill = species,colour = species)) +
  geom_point()+geom_smooth(method='lm')
```

R made that so easy! Notice the consistent, positive linear trends for each species. So, while the overall correlation is quite negative, the within-species correlations are quite positive. This is a phenomenon known as Simpson's Paradox (or the Yule-Simpson Effect), and it happens uncomfortably often. This is almost as bad as when your scatterplot shows the face of a monkey (remember Workshop 2?), except that it is very real. Always visualise your data when possible, as soon as possible...

# A Brief Digression into Linear Models

A consequence of the above is that neither standard correlation nor regression are appropriate to the data. It appears as though we have a common slope but multiple intercepts. We can fit that model in R using lm: 

```{r}
common_slope_model <- lm(bill_depth_mm~body_mass_g+species,data=penguins)
summary(common_slope_model)
```

How do we read these results? Species is a factor whose first level is Adelie, and you can check this by calling "levels(penguins$species)". The intercept for the model, shown as "(Intercept)" above, corresponds to the intercept for the Adelie regression line. If we were to extend the x-axis to reach zero and also extend the red line at a constant slope, then this intercept (12.763) is where that line would cross the y-axis at x=0. On the other hand, "speciesChinstrap" represents the *difference* between Adelie intercept and the Chinstrap intercept. So the Chinstrap intercept is 12.763 + 0.025 = 12.788. Likewise, the Gentoo intercept is 12.763 + -5.439 = 7.324, a lower intercept which follows the intuition from the plot.

The entry for "body_mass_g" is the common regression slope and it appears to be highly significant (as in nonzero). The intercept is likewise highly significant (also as in nonzero); however, "speciesChinstrap" is not. That is, because we cannot distinguish the regression lines for Adelie and Chinstrap, we do not observe a significant *difference* between them.

The model is a direct reflection of the plot, and it was easy to guess which estimates would be significant. So clear was the picture that we did not even bother considering whether each species might have different slopes, but we could have tested that too. You may recall that different slopes would be captured by an *interaction* between body_mass_g and species. This makes intuitive sense: if body_mass_g is the slope, then an interaction with species means that the slope is species dependent. We can add the interaction to the model by replacing "+" in the lm statement with "*":

```{r}
different_slope_model <- lm(bill_depth_mm~body_mass_g*species,data=penguins)
summary(different_slope_model)
```

The last two entries of the summary are the interaction terms (indicated by ":") and as expected are not significant.

We will return to models in Week 8. This digression was a preview whose purpose was to emphasise how visualisation and models are complementary, with models often quantifying what has been qualitatively observed.

# A Brief Digression into Permutations, again

In the previous workshop, we explored permutations as an approach to understanding how our statistics behave under the null hypothesis. To briefly reinforce those exercises, let's consider here whether the differences we just observed between penguin species are real. (Spoiler alert: they obviously are, and this is just to make a point.) To get a sense of how things would look if the relationship between bill depth and body mass was not mediated by species, let's scramble the species labels in the tibble.

```{r}
permuted_penguins <- penguins
permuted_penguins$species <- permuted_penguins$species[sample(length(penguins$species))]
head(permuted_penguins)
```

What we've just done is scrambled the first column and kept the remaining columns unchanged. Go ahead and repeat your very colourful plot, pasting the code below and replacing penguins with permuted_penguins.

```{r}
ggplot(data = permuted_penguins, mapping = aes(x = body_mass_g, y = bill_depth_mm,fill = species, colour=species)) +
  geom_point() + geom_smooth(method='lm')
```
Qualitatively speaking, if the lines in this plot look different than before, then the species differences are likely to be real. Of course, we would want to observe this across many permutations, because that is how we conclude that effect of species is unlikely to be due to chance. Feel free to run the previous two code blocks again (and again), re-randomising the species labels and then plotting the results. The permuted data behaves very different than the real data, suggesting the observed pattern in your very colourful plot is attributable to species differences. You see the same thing with the permuted boxplot, etc.:

```{r}
ggplot(data = permuted_penguins, mapping = aes(x = species,y = body_mass_g,colour=species)) +
  geom_boxplot() 
```

Just to drive the point home, let's generate a few more permuted versions of the above plot and contrast them with the true data.

```{r}
# This code block creates a plot matrix comparing the actual body mass box plot (upper right) to those obtained from many permutations

# Build a tibble to store the data, beginning with the actual data
perm_tibble <- penguins %>% select(species,body_mass_g)
# Set the number of permutations, here 24 for better viewing 
n_reps <- 24
# Grow the tibble column by column with permuted values
for (i in 1:n_reps)
{
    # Name the permutation reps P1,P2,...
    new_name <- paste("P",i,sep="")
    # Generate a permuted column of body mass values. Note that this is equivalent     to permuting the species labels; however, permuting values makes the plotting     easier
    new_col <- tibble(penguins$body_mass_g[sample(length(penguins$species))])
    # Assign the new column its name
    colnames(new_col) <- new_name
    # Attach the permuted column to the end of the growing tibble
    perm_tibble <- cbind(perm_tibble,new_col)
}
# Record the order of the column names for later use as plot order
factor_levels <- colnames(perm_tibble)[2:(n_reps+2)]
# Pivot the tibble built above into long form
plot_tibble <- pivot_longer(perm_tibble,cols=2:(n_reps+2),names_to = c("rep"))
# Turn the rep column into a factor, using the order stored above
plot_tibble$rep <- factor(plot_tibble$rep,levels=factor_levels)
# Plot a matrix of box plots, beginning with the real data, followed from left to right with P1,P2,etc. Set the number of columns in the plot matrix to 5 for viewing. Remove the x-axis annotations.
ggplot(plot_tibble,aes(x=species,y=value,colour=species))+geom_boxplot()+facet_wrap(~rep,ncol=5)+theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())
```


## Exploring the Data Even More

Remember that the 3 different species of penguins in this dataset were found across 3 islands in the Palmer Archipelago. We may also wish to discover whether there were differences in penguin characteristics between the islands. Of course, it may be that each species is unique to one island, in which case we could not distinguish between species differences and island differences. You may recall this concept from BIOL 2202 as "confounding". Let's use some tidyverse magic to count the number of each species on each island:

```{r}
penguins %>% count(species,island)
```

It appears that only Adelie penguins were found on multiple islands. Let's make a visual comparison of their characteristics on each island and see whether we can spot any differences. As a start, let's compare box plots of body mass. Note how the code is constructed. Because we are only comparing Adelie penguins, we use filter to omit the non-Adelie rows of penguins. We then send the filtered tibble as data to ggplot. The pipes (%>%) join the code together, and each command to the right uses the output from the left as its data input. As we have made no assignments (i.e. using "<-" or "="), no variables have changed.

```{r}
penguins %>% filter(species == "Adelie") %>% ggplot(mapping = aes(x = island, y = body_mass_g,fill = island ))+ geom_boxplot()
```

Next, let's examine the relationship between body mass and bill depth for Adelie penguins on each island. Write code in the block below to do so, once again using geom_smooth.

```{r}
penguins %>% filter(species == "Adelie") %>% ggplot(mapping = aes(x = body_mass_g, y = bill_depth_mm,colour=island)) + geom_point()+geom_smooth(method = 'lm')

```

The relationship between bill depth and body mass does not appear to vary by island. (That is to say, if we were to run the linear model, we would not find a significant  body_mass_g:island interaction.)

There's so much more to consider. We have male penguins and female penguins, and perhaps their characteristics are different. Let's start by counting how many male and female penguins there are of each species in the dataset. Write code in the block below to do this.

```{r}
penguins %>% count(species,island,sex)
```

Was NA counted as a sex in your table? That's not so helpful. Let's filter those out first. Finish the code block as above to do so.

```{r}
penguins %>% filter(!(is.na(sex))) %>% count(species,island,sex)
```

Now let's examine how body mass depends on species and sex. Use facet_wrap (or facet_grid) to make an informative plot, and be sure to filter out the NA values first.

```{r}
ggplot(data = penguins %>% filter(!(is.na(sex))), mapping = aes(x = species,y = body_mass_g,colour=species)) +geom_boxplot() +facet_wrap(~sex)

```

Based on your plot, does one sex appear to be heavier than the other? Does the sex difference appear to differ by species (that is, does there appear to be a sex:species interaction)? Answer below, referencing the plot you just made.

```{r eval=FALSE}
According to my plot, I found that males weigh more than females in all three penguin species. It showed obvious sex difference within species. However, the weight difference between males and females is different for each penguin species, and there are differences between species.There appears to be  a sex:species interaction.
```

Previously we examined the relationship between bill depth and body mass across species. Let's now also consider the effect of sex, by including it in your very colourful plot as a shape.

```{r}
ggplot(data = penguins %>% filter(!(is.na(sex))), mapping = aes(x = body_mass_g, y = bill_depth_mm, colour=species,shape = sex)) +
  geom_point() + geom_smooth(method='lm')
```

Based on your plot, does the effect of body mass on bill depth (slope) appear to depend on either species or sex? Comment in the block below.

```{r eval=FALSE}
From the plot above, we can see the species and sex both have a impact on the relationship between bill depth and body mass. In the species of Adelie, the difference in slope between the sexes will be more pronounced than in the other two species. 
```

This is becoming tedious. There must be a way to visualise many relationships at once. Let's try out ggpairs in the package GGally.

```{r}
#install.packages('GGally')
library(GGally)
```

You could just try out ggpairs(penguins) and see what happens. But a less messy approach would be to try it out on a subset of the data. Here's what happens when ggpairs is applied to the four continuous measurements:

```{r message = FALSE, warning = FALSE}
penguins %>% select(bill_length_mm,bill_depth_mm,flipper_length_mm,body_mass_g) %>% ggpairs()
```

What was that?!? Calling ggpairs created a pairwise comparison of the four measurements. The 4x4 plot matrix contains a wealth of information. The diagonal shows the density (smoothed histogram) of each measurement, while their pairwise scatterplots are shown below the diagonal. Above the diagonal are the corresponding pairwise correlations.

Of course, not all information is useful, and we know already that the correlations in this dataset are misleading due to species differences. Let's next add species as a colour in the ggpairs plot.

```{r message = FALSE, warning = FALSE}
penguins %>% select(bill_length_mm,bill_depth_mm,flipper_length_mm,body_mass_g,species) %>% ggpairs(aes(colour = species))
```

That changed things dramatically. Comment below on three things revealed by this ggpairs plot that could not be inferred from the previous version.

```{r eval=FALSE}
(1) We can look at the corr numbers to see the correlation between each two elements.
(2) We can see the geom_histogram plot of each element in the species shows the distribution of the element in the species seperately.
(3) We can compare the distribution of every element in different species by looking at the geom_density plot.
```

Now create a similar plot, except with sex in place of species. This time, modify the transparency of the points by adding "alpha = 0.4" to the aesthetic. And don't forget to filter out the NA values.

```{r message = FALSE, warning = FALSE}
penguins %>% filter(!(is.na(sex))) %>% select(bill_length_mm,bill_depth_mm,flipper_length_mm,body_mass_g,sex) %>% ggpairs(aes(colour = sex,alpha = 0.4))

```

## Final Thoughts

The one aspect of the penguin data that we have not yet considered is year. For completeness, and maybe just for fun, let's use facet_grid to investigate the combined effect of year, species and sex on flipper length. 

```{r}
penguins %>% filter(!(is.na(sex))) %>% mutate(year = as.factor(year)) %>% ggplot(mapping = aes(x = species,y=flipper_length_mm, colour=species)) + geom_boxplot() + 
  geom_jitter(width = 0.2, height = 0, alpha = 0.4) + facet_grid(sex ~ year) + theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```

To check your understanding of ggplot commands, in the block below add comments explaining each line of the code used to make the previous plot. As examples, the first and last have been provided already.

```{r eval=FALSE}
# Start with the tibble containing the data
penguins %>%
# Filter out the missing data(NA) in sex column
filter(!(is.na(sex))) %>% 
# Converts the year column from numeric to factor. Adds new variable year and preserves existing ones.
mutate(year = as.factor(year)) %>% 
# Use the ggplot to visualize the data. The data on the X-axis is species, and the Y-axis is the flipper length. Species are used to form different groups.
ggplot(mapping = aes(x = species,y = flipper_length_mm, colour=species)) + 
# Use the type of boxplot to to visualize the data.
geom_boxplot() + 
# Add the jitter for the box plot. Compare to the geom_plot, it adds a small amount of random variation to the position of each point. The width of each dot is 0.2, height is 0, and aesthetic is 0.4.
geom_jitter(width = 0.2, height = 0, alpha = 0.4) + 
# Use the facet_grid to separate each year and each sex as different part of plot. 
facet_grid(sex ~ year) + 
# Remove the annotations on the x axis
theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())
```

## Extension

Suppose that you were given measurements of a penguin and asked to identify its species. Among the four measurements -- bill length, bill depth, flipper length, and body mass -- which one would be most informative? Which one would be least informative? If you could choose two of the four measurements to help you guess the species, which would they be, and why?


```{r eval=FALSE}
most informative: body mass
least informative: flipper length

choose two of the four measurements: bill length and body mass. 
reason: Because if each of the two groups of measurements are taken as X and Y coordinates and represented by a scatter plot, the three species has the most significant differece from each other in the scatter plot of Bill Length and Flipper Length. Basically, we can tell which species it belongs to from the relationship between Bill Length and Flipper Length. If the relationship between the two measurements is not considered, the two measurements can be used separately to identify which population they belong to. We can look at flipper length to see if it belongs to Gentoo. If it does not belong to Gentoo, observe Bill Length and distinguish Adelie from Chinstrap.

```

Most of the plots above are visual representations of linear models. Add code blocks to run the linear models that correspond to each such plot, and compare the results to your qualitative observations.

```{r}
bill_length_depth<-lm(bill_depth_mm ~ bill_length_mm +species, data=penguins) 
summary(bill_length_depth)
```

```{r}
length_length_model<-lm(bill_length_mm ~ flipper_length_mm +species, data=penguins) 
summary(length_length_model)
```

```{r}
length_mass_model<-lm(bill_length_mm ~ body_mass_g +species, data=penguins) 
summary(length_mass_model)
```

```{r}
flipper_length_depth_model<-lm(flipper_length_mm ~ bill_depth_mm +species, data=penguins) 
summary(flipper_length_depth_model)
```

```{r}
flipper_length_mass_model<-lm(flipper_length_mm ~ body_mass_g +species, data=penguins) 
summary(flipper_length_mass_model)
```

```{r}
depth_mass_model<-lm(bill_depth_mm ~ body_mass_g +species, data=penguins) 
summary(depth_mass_model)
```


```{r eval=FALSE}

For the two mesurnment we choose: bill length and body mass,
"speciesChinstrap" represents the *difference* between Adelie intercept and the Chinstrap intercept. So the Chinstrap intercept is 2.492e+01 + -9.921e+00 = 14.999. Likewise, the Gentoo intercept is 2.492e+01 + 3.558e+00 = 28.478
"speciesGentoo" represents the *difference* between Adelie intercept and the Gentoo intercept.

We can see from the Intercept, that the three regression lines are clearly distinguished.

The entry for "body_mass_g" is the common regression slope. For looking at the slope, we can distinguish the three regression lines because they have significant diffences between each other.

Because we can distinguish the regression lines for Adelie and Chinstrap & Adelie and Gentoo  , we can observe a significant *difference* between them. So, the pair of mesurement I use (bill length and body mass) is suitble for identify the species.

```